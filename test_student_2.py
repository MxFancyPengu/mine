from turtle import *
import celtic.stats as stats
import celtic.parser as parser
import pprint

# The student working on the stats (computing statistics) should modify this
# script. The stats module will use the fake data defined in dictionaries in the
# script parser.data_example.py
# Once I grade, I will be using the data generated by your teammate.

# change the value of this variable as you complete each function so you
# can test them! the values go from 2 to 8
working_on = 2

print('***************************************************')
print('computing stats')
print('***************************************************')


# You have to implement the functions in stats, you have to decide
# which one to pass as argument to these stats functions.
# Presently these functions are returning empty results because
# the dictionaries are empty except stats.most_common_word()
# which I provide as example.

if working_on >= 1:
    print('******* Stats Most Common Word *******')
    print(stats.most_common_word(parser.fake_global_count_index))

if working_on >= 2:
    print('******* Stats Largest Document *******')
    print(stats.get_largest_document(parser.fake_global_count_index))

if working_on >= 3:
    print('******* Stats Average Length *******')
    print(stats.avg_length(parser.fake_corpus_data, 'document1'))

if working_on >= 4:
    print('******* Stats Words Letter End *******')
    print(stats.get_words_letter_end(parser.fake_corpus_data, 'a'))

if working_on >= 5:
    print('******* Stats Words Letter Begin *******')
    print(stats.get_words_letter_begin(parser.fake_corpus_data, 'n'))

if working_on >= 6:
    print('******* Stats Words Size *******')
    print(stats.get_words_size(parser.fake_corpus_data, 4))

if working_on >= 7:
    print('******* Stats Compute Average *******')
    print(stats.compute_avg(parser.fake_corpus_data))

if working_on >= 8:
    print('******* Stats Words Greater Than *******')
    print(stats.get_words_grater_avg(parser.fake_corpus_data, 4))

